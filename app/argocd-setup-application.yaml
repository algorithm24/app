apiVersion: v1
kind: List
items:
- apiVersion: v1
  kind: Namespace
  metadata:
      name: grafana
- apiVersion: v1
  kind: Namespace
  metadata:
      name: prometheus
- apiVersion: v1
  kind: Namespace
  metadata:
      name: loki
- apiVersion: v1
  kind: Namespace
  metadata:
      name: external-dns
- apiVersion: v1
  kind: Namespace
  metadata:
      name: cert-manager
- apiVersion: v1
  kind: Namespace
  metadata:
    labels:
      app.kubernetes.io/instance: ingress-nginx
      app.kubernetes.io/name: ingress-nginx
    name: ingress-nginx
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: create-account-service
  namespace: argocd
spec:
  destination:
    namespace: default
    server: 'https://kubernetes.default.svc'
  project: default
  source:
    path: app/k8s/create
    repoURL: 'https://github.com/algorithm24/app.git'
    targetRevision: HEAD
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: item-service
  namespace: argocd
spec:
  destination:
    namespace: default
    server: 'https://kubernetes.default.svc'
  project: default
  source:
    path: app/k8s/item
    repoURL: 'https://github.com/algorithm24/app.git'
    targetRevision: HEAD
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: login-service
  namespace: argocd
spec:
  destination:
    namespace: default
    server: 'https://kubernetes.default.svc'
  project: default
  source:
    path: app/k8s/login
    repoURL: 'https://github.com/algorithm24/app.git'
    targetRevision: HEAD
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: gateway
  namespace: argocd
spec:
  destination:
    namespace: default
    server: 'https://kubernetes.default.svc'
  project: default
  source:
    path: app/k8s/gateway
    repoURL: 'https://github.com/algorithm24/app.git'
    targetRevision: HEAD
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: cert-manager
  namespace: argocd
spec:
  destination:
    namespace: cert-manager
    server: 'https://kubernetes.default.svc'
  project: default
  source:
    path: app/k8s/cert-manager
    repoURL: 'https://github.com/algorithm24/app.git'
    targetRevision: HEAD
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: ingress-nginx-controller
  namespace: argocd
spec:
  destination:
    namespace: ingress-nginx
    server: 'https://kubernetes.default.svc'
  project: default
  source:
    path: deploy/static/provider/cloud
    repoURL: 'https://github.com/kubernetes/ingress-nginx'
    targetRevision: d003aae913cc25f375deb74f898c7f3c65c06f05
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: grafana
  namespace: argocd
spec:
  destination:
    namespace: grafana
    server: 'https://kubernetes.default.svc'
  project: default
  source:
    chart: grafana
    repoURL: https://grafana.github.io/helm-charts
    targetRevision: 6.43.4
    helm:
      releaseName: grafana
      parameters:
        - name: adminPassword
          value: admin
        - name: service.type
          value: LoadBalancer
      values: |
        datasources:
          datasources.yaml:
            apiVersion: 1
            datasources:
            - name: Prometheus
              type: prometheus
              url: http://prometheus-server.prometheus.svc.cluster.local
              access: proxy
              isDefault: true
            - name: Loki
              type: loki
              url: http://loki.loki.svc.cluster.local:3100
              access: proxy
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: prometheus
  namespace: argocd
spec:
  destination:
    namespace: prometheus
    server: 'https://kubernetes.default.svc'
  project: default
  source:
    chart: prometheus
    repoURL: https://prometheus-community.github.io/helm-charts
    targetRevision: 15.18.0
    helm:
      releaseName: prometheus
      parameters:
        - name: alertmanager.persistentVolume.enabled
          value: 'false'
        - name: server.persistentVolume.enabled
          value: 'false'
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: loki
  namespace: argocd
spec:
  destination:
    namespace: loki
    server: 'https://kubernetes.default.svc'
  project: default
  source:
    chart: loki-stack
    repoURL: https://grafana.github.io/helm-charts
    targetRevision: 2.8.4
    helm:
      releaseName: loki
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: external-dns
  namespace: argocd
spec:
  destination:
    namespace: external-dns
    server: 'https://kubernetes.default.svc'
  project: default
  source:
    chart: external-dns
    repoURL: https://charts.bitnami.com/bitnami
    targetRevision: 6.11.3
    helm:
      releaseName: external-dns
      parameters:
        - name: serviceAccount.create
          value: 'false'
        - name: serviceAccount.name
          value: external-dns
  syncPolicy:
    automated:
      prune: true
      selfHeal: true